include "pipelines/common.glsl"

vertex_shader [[
	layout(std140, binding = 4) uniform Model {
		mat4 u_model;
	};
	layout(location = 0) in vec3 a_position;
	layout(location = 1) in vec4 a_color;
	
	layout (location = 0) out vec4 v_color;
	
	void main() {
		v_color = vec4(pow(abs(a_color.rgb), vec3(2.2)), a_color.a);
		gl_Position = Pass.view_projection * u_model * vec4(a_position, 1);
	}
]]


fragment_shader [[
	layout (location = 0) in vec4 v_color;
	layout (location = 0) out vec4 o_color;
	void main() {
		o_color = v_color;
	}
]]